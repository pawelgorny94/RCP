

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<br />
@*<button type="button" class="btn btn-info btn-lg blue" data-toggle="modal" style="float:right;" data-target="#myModal">Nowy</button>*@
<a id="add" class="btn btn-primary" style="float:right;background-color:#243a51">Dodaj nowe</a>
<br />
<h4>Wybierz plan pracy</h4>
<hr />

@{Html.RenderAction("ZmianyPartial", "WorkChange", new { });}


@*<a class="waves-effect waves-light btn modal-trigger" href="#modal1">Modal</a>


<div id="modal1" class="modal">
    <div class="modal-content">
        <h4>Modal Header</h4>
        <p>A bunch of text</p>
    </div>
    <div class="modal-footer">
        <a  class="modal-action modal-close waves-effect waves-green btn-flat">Akceptuj</a>
        <a  class="modal-action modal-close waves-effect waves-green btn-flat">Zamknij</a>
    </div>
    
   
</div>*@


   
    <!-- Trigger the modal with a button -->
   

    @*<!-- Modal -->
    <div class="modal fade" id="myModal" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Tworzenie nowego harmonogramu</h4>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Symbol, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Symbol, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Symbol, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Nazwa, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Nazwa, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Nazwa, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>

        </div>
    </div>*@


@{ Html.RenderAction("NewWorkChange"); }

<script>

    $('a#add').on('click', function () {
        $('div#mdlAddFrm').modal({ backdrop: 'static', show: true });
    });

    $("#addWorkChange").submit(function (e) {
        var nadgodziny = "0";

            if ($('#czyNadgodziny').is(':checked')) {
                nadgodziny = "1";
            }

        
        var newInput = $("<input name='nadgodziny' value='" + nadgodziny + "' type='hidden'>");
        $(newInput).appendTo("#addWorkChange");
    })
  

    //$(document).ready(function () {
    //    // the "href" attribute of the modal trigger must specify the modal ID that wants to be triggered
    //    $(document).on("click", ".modal-trigger", function () {
    //        $('.modal').modal({
    //            dismissible: true, // Modal can be dismissed by clicking outside of the modal
    //            opacity: .5, // Opacity of modal background
    //            inDuration: 300, // Transition in duration
    //            outDuration: 200, // Transition out duration
    //            startingTop: '4%', // Starting top style attribute
    //            endingTop: '10%', // Ending top style attribute
    //            ready: function (modal, trigger) { // Callback for Modal open. Modal and trigger parameters available.
    //                alert("Ready");
    //                console.log(modal, trigger);
    //            },
    //            complete: function () { alert('Closed'); } // Callback for Modal close
    //        });
    //    })
       
    //});
</script>